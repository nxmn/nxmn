{
  "root": "packages/cache-server",
  "sourceRoot": "packages/cache-server/src",
  "projectType": "application",
  "targets": {
    "build-base": {
      "executor": "@nrwl/js:tsc",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/packages/cache-server",
        "main": "packages/cache-server/bin/cache-server.ts",
        "tsConfig": "packages/cache-server/tsconfig.app.json",
        "generatePackageJson": true
      },
      "configurations": {
        "production": {
          "optimization": true,
          "extractLicenses": false,
          "inspect": false
        }
      }
    },
    "build": {
      "executor": "@nrwl/workspace:run-commands",
      "outputs": ["dist/packages/cache-server"],
      "options": {
        "commands": [
          "chmod +x dist/packages/cache-server/bin/cache-server.js"
        ],
        "parallel": false
      },
      "dependsOn": [
        {
          "target": "build-base",
          "configurations": ["production"],
          "projects": "self"
        }
      ]
    },
    "serve": {
      "executor": "@nrwl/node:execute",
      "options": {
        "buildTarget": "cache-server:build"
      }
    },
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["packages/cache-server/**/*.ts"]
      }
    },
    "test": {
      "executor": "@nrwl/jest:jest",
      "outputs": ["coverage/packages/cache-server"],
      "options": {
        "jestConfig": "packages/cache-server/jest.config.js",
        "passWithNoTests": true
      }
    },
    "create-container": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "commands": [
          "rm -rf ./dist/containers/cache-server",
          "mkdir -p ./dist/containers/cache-server",
          "cp -R ./dist/packages/cache-server ./dist/containers/cache-server/output",
          "cp ./packages/cache-server/Containerfile ./dist/containers/cache-server/Containerfile",
          "cd ./dist/containers/cache-server && docker build -f Containerfile -t cache-server:latest ."
        ],
        "parallel": false
      },
      "dependsOn": [
        {
          "target": "build",
          "configurations": ["production"],
          "projects": "self"
        }
      ]
    },
    "version": {
      "executor": "@jscutlery/semver:version",
      "options": {
        "baseBranch": "main",
        "push": true,
        "noVerify": true,
        "postTargets": ["cache-server:publish", "cache-server:github"],
        "commitMessageFormat": "chore(${projectName}): release version ${version}"
      }
    },
    "github": {
      "executor": "@jscutlery/semver:github",
      "options": {
        "tag": "${tag}",
        "notes": "${notes}"
      }
    },
    "publish": {
      "executor": "ngx-deploy-npm:deploy",
      "options": {
        "access": "public"
      }
    }
  },
  "tags": []
}
